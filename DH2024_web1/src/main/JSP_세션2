[개발 흐름]

개발자 코드 -저장-> 개발자 PC -컴파일/빌드->
						 톰캣 프로그램을 통해 웹서버로 코드 전달 
						 							<-HTTP Request- 클라이언트(유저/브라우저)
													-HTTP Response-> 클라이언트(유저/브라우저)		
													예] Talend API 로 Request 시 톰캣으로 전달 됨
						
[세션]
- 네트워크 분야에서 상호작용(정보교환)을 하는 상태의 의미
- 브라우저 세션/쿠키 , 톰캣 세션/쿠키 지원 
1. 정의 : 톰캣 서버 내 데이터를 저장하고 관리할 수 있도록 메모리 제공(수업은 tomcat 을 세션으로 사용)
2. 목적 
	1) 상태(데이터) 관리
	2) 인증 / 권한
	3) 효율적인 데이터 관리
3. 사용처
	1) 로그인 상태 유지
	2) (비회원제) 장바구니 기능 => 세션 / (회원제) 장바구니 => DB
	3) 자동로그인 / 테마 등 사용자의 설정값
	4) 실시간 처리
	등등~~~
4. 톰갯 내 세션 객체 
	- request.getSession() : 현재 톰캣의 세션 객체를 불러오고 세션 객체가 없을 시 생성함
		-> 형식 : HttpSession 변수명 = req.getSession();
		-> 브라우저의 첫 요청 : 세션 객체 생성
		-> 생성 된 후 : 기본 객체를 불러옴
		-> 세션은 사용자의 IP 와 브라우저의 요청 정보를 이용하여 세션 객체를 관리 
			★ 컴퓨터 / 브라우저 마다 서로 다른 메모리 공간을 만들 수 있음 ★
			예] 크로에서 로그인 시 엣지에서 로그인되지 않음
			예] 비회원제로 PC_1에서 장바구니 사용 시 PC_2 에서의 장바구니는 데이터가 없음
5. 세션 객체의 주요 메소드
	1) 세션객체명.getAttributeNames() : 세션 객체 내 모든 속성을 Collections 객체로 반환
	2) 세션객체명.getCreationTime() : 세션 객체가 만들어진 시간 반환 -> 시/분/초로 환산 필요
	3) 세션객체명.getId() : 주소값이 아닌 세션 객체의 식별자 반환
	4) 세션객체명.getLastAccessedTime() : 세션 객체의 마지막 사용 시간
	5) 세션객체명.isNew() : 새로 만들어진 세션인지 여부 반환(boolean)
	6) 세션객체명.setAttribute("key", value) : 세션 객체의 key(속성명) / value (속성값) 를 entry(한쌍)으로 저장
	7) 세션객체명.getAttribute("key") : 세션 객체의 지정한 속성명의 값 호출
	8) 세션객체명.removeAtrribute("key") : 세션 객체의 지정한 속성명 제거
6. 세션의 생성과 소멸
	- 생성 : 클라이언트가 서버로부터 첫 요청 시
	- 소멸 : 서버가 종료/재시작 시 , remove 시
	- 생명주기 : 
	=> 전역변수로 활용 가능
	